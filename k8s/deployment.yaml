apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: django
  labels:
    name: django
spec:
  replicas: 3
  # Here we define the rolling update strategy
  # - maxSurge define how many pod we can add at a time
  # - maxUnavailable define how many pod can be unavailable
  #   during the rolling update
  #
  # Setting maxUnavailable to 0 would make sure we have the appropriate
  # capacity during the rolling update.
  # You can also use percentage based value instead of integer.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0 
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
      - name: django
        image: 626449308506.dkr.ecr.us-east-1.amazonaws.com/django:latest
        imagePullPolicy: Always
      restartPolicy: Always

---


apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/subnets: subnet-a4f0098e,subnet-457ed533,subnet-95c904cd
    name: django
    namespace: foo
  spec:
    rules:
      - host: 
        http:
          paths:
            - path: /
              backend:
                serviceName: django
                servicePort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: django
  labels:
    service: django
spec:
  # Expose the service on a static port on each node
  # so that we can access the service from outside the cluster 
  type: NodePort
  selector:
    app: django
  ports:
    # Three types of ports for a service
    # nodePort - a static port assigned on each the node
    # port - port exposed internally in the cluster
    # targetPort - the container port to send requests to
    - nodePort: 30163
      port: 8000
      targetPort: 8000

